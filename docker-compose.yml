version: '3.8'

services:
  # Deblock Transaction Monitor Service
  deblock-txmonitor:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: deblock-txmonitor
    environment:
      # Server Configuration
      - SERVER_PORT=8080
      - LOG_LEVEL=debug
      - GIN_MODE=debug

      # Ethereum Blockchain Configuration
      - ETHEREUM_RPC_URL=https://eth-sepolia.g.alchemy.com/v2/m-UW8CyhYUqAwfnZFGQF1
      - ETHEREUM_WS_URL=wss://eth-sepolia.g.alchemy.com/v2/m-UW8CyhYUqAwfnZFGQF1

      # Redis Configuration for Distributed Locking
      - REDIS_URL=redis://redis:6379

      # Kafka Configuration for Event Publishing
      - KAFKA_BROKERS=kafka:9092

      # Watched Ethereum Addresses (comma-separated)
      # Example: WATCHED_ADDRESSES=0x1234567890123456789012345678901234567890,0x0987654321098765432109876543210987654321
      - WATCHED_ADDRESSES=

      # Retry Configuration
      - RETRY_BASE_DELAY=100
      - RETRY_MAX_DELAY=5000
      - RETRY_MAX_RETRIES=5

    ports:
      - "8080:8080"
    depends_on:
      - redis
      - kafka
    networks:
      - deblock-network

  # Redis for Distributed Locking
  redis:
    image: redis:6.2-alpine
    container_name: deblock-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - deblock-network

  # Zookeeper for Kafka coordination
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: deblock-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - deblock-network

  # Kafka for Event Publishing
  kafka:
    image: wurstmeister/kafka
    container_name: deblock-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "transaction-topic:1:1"
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    depends_on:
      - zookeeper
    volumes:
      - kafka-data:/kafka
    networks:
      - deblock-network

  # Optional: Kafka UI for monitoring
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: deblock-kafka-ui
    ports:
      - "8090:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    depends_on:
      - kafka
      - zookeeper
    networks:
      - deblock-network

volumes:
  redis-data:
  kafka-data:

networks:
  deblock-network:
    driver: bridge
